# Generated by Django 4.1.4 on 2023-01-05 01:31

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import pulsifi.models_utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('bio', models.TextField(blank=True, max_length=200, null=True, verbose_name='Bio')),
                ('verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('following', models.ManyToManyField(blank=True, related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Pulse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True, verbose_name='Visibility')),
                ('message', models.TextField(verbose_name='Message')),
                ('_date_time_created', models.DateTimeField(auto_now=True, verbose_name='Creation Date & Time')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pulses', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('disliked_by', models.ManyToManyField(blank=True, related_name='disliked_pulses', to=settings.AUTH_USER_MODEL)),
                ('liked_by', models.ManyToManyField(blank=True, related_name='liked_pulses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pulse',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_object_id', models.PositiveIntegerField()),
                ('reason', models.TextField(verbose_name='Reason')),
                ('category', models.CharField(choices=[('SPM', 'Spam'), ('SEX', 'Nudity or sexual activity'), ('HAT', 'Hate speech or symbols'), ('VIO', 'Violence or dangerous organisations'), ('IGL', 'Sale of illegal or regulated goods'), ('BUL', 'Bullying or harassment'), ('INP', 'Intellectual property violation or impersonation'), ('INJ', 'Suicide or self-injury'), ('SCM', 'Scam or fraud'), ('FLS', 'False or misleading information')], max_length=3, verbose_name='Category')),
                ('status', models.CharField(choices=[('PR', 'In Progress'), ('RE', 'Rejected'), ('CM', 'Completed')], default='PR', max_length=2, verbose_name='Status')),
                ('_date_time_created', models.DateTimeField(auto_now=True, verbose_name='Creation Date & Time')),
                ('_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('assigned_staff', models.ForeignKey(default=pulsifi.models_utils.get_random_staff_member_id, limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_reports', to=settings.AUTH_USER_MODEL, verbose_name='Assigned Staff Member')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL, verbose_name='Reporter')),
            ],
            options={
                'verbose_name': 'Reply',
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True, verbose_name='Visibility')),
                ('message', models.TextField(verbose_name='Message')),
                ('_date_time_created', models.DateTimeField(auto_now=True, verbose_name='Creation Date & Time')),
                ('_object_id', models.PositiveIntegerField()),
                ('_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('_original_pulse', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pulsifi.pulse', verbose_name='Original Pulse')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('disliked_by', models.ManyToManyField(blank=True, related_name='disliked_replies', to=settings.AUTH_USER_MODEL)),
                ('liked_by', models.ManyToManyField(blank=True, related_name='liked_replies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reply',
                'verbose_name_plural': 'Replies',
            },
        ),
    ]
